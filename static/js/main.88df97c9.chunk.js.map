{"version":3,"sources":["components/Goods.jsx","constants.js","App.jsx","index.jsx"],"names":["Goods","goods","map","good","SORT_BY","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","sortType","isReverseD","preparedGoods","reverse","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAEaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCPAC,EACH,SADGA,EAED,iBCKCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAhCR,SAA0BX,EAAOY,EAAUC,GACzC,IAAMC,EAAa,YAAOd,GAE1B,OAAKY,GAAYC,EACRC,EAAcC,WAGnBH,GACFE,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQN,GACN,KAAKT,EACH,OAAOU,EACHK,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAE1B,KAAKf,EACH,OAAOU,EACHK,EAAME,OAASH,EAAMG,OACrBH,EAAMG,OAASF,EAAME,OAE3B,QACE,OAAO,MAKRN,GAMcO,CAAiBjB,EAAiBG,EAAWE,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpBjB,IAAcJ,EAAmB,GAAK,YAExCsB,QAAS,kBAAMjB,EAAaL,IAL9B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,iBACpBjB,IAAcJ,EAAiB,GAAK,YAEtCsB,QAAS,kBAAMjB,EAAaL,IAL9B,4BAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,oBACpBf,EAAa,GAAK,YACpBgB,QAAS,kBAAMf,GAAeD,IAJhC,sBASEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAzCV,WACEjB,EAAa,IACbE,GAAc,IAoCR,sBAUJ,cAAC,EAAD,CAAOV,MAAOW,QCnGpBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.88df97c9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Goods = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","export const SORT_BY = {\n  LENGTH: 'length',\n  ALPHABET: 'alphabetically',\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\nimport { SORT_BY } from './constants';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, sortType, isReverseD) {\n  const preparedGoods = [...goods];\n\n  if (!sortType && isReverseD) {\n    return preparedGoods.reverse();\n  }\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_BY.ALPHABET:\n          return isReverseD\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        case SORT_BY.LENGTH:\n          return isReverseD\n            ? good2.length - good1.length\n            : good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  function reset() {\n    setSortField('');\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            sortField === SORT_BY.ALPHABET ? '' : 'is-light')\n          }\n          onClick={() => setSortField(SORT_BY.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            sortField === SORT_BY.LENGTH ? '' : 'is-light')\n          }\n          onClick={() => setSortField(SORT_BY.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            isReversed ? '' : 'is-light')}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n      <Goods goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}